#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–∏ crop_to_70_percent_with_blur
"""
import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.insert(0, str(Path(__file__).parent))

from Components.FaceCrop import crop_to_70_percent_with_blur

def test_crop_function():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é crop_to_70_percent_with_blur —Å –ø—Ä–∏–º–µ—Ä–æ–º –≤–∏–¥–µ–æ"""

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ FFmpeg
    import subprocess
    try:
        result = subprocess.run(['ffmpeg', '-version'], capture_output=True, text=True, check=True)
        print("‚úì FFmpeg –Ω–∞–π–¥–µ–Ω")
    except (subprocess.CalledProcessError, FileNotFoundError):
        print("‚úó FFmpeg –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ FFmpeg –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.")
        return False

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ —Å –ø–æ–º–æ—â—å—é FFmpeg (–ø—Ä–æ—Å—Ç–æ–π —Ü–≤–µ—Ç–Ω–æ–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫)
    test_input = "test_input.mp4"
    test_output = "test_output_70_percent.mp4"

    print("–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ...")
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ 1920x1080 —Å —Ü–≤–µ—Ç–Ω—ã–º–∏ –ø–æ–ª–æ—Å–∞–º–∏
        subprocess.run([
            'ffmpeg',
            '-f', 'lavfi',
            '-i', 'testsrc2=duration=5:size=1920x1080:rate=30',
            '-y',
            test_input
        ], check=True, capture_output=True)
        print(f"‚úì –¢–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ —Å–æ–∑–¥–∞–Ω–æ: {test_input}")
    except subprocess.CalledProcessError as e:
        print(f"‚úó –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ: {e}")
        return False

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—à—É —Ñ—É–Ω–∫—Ü–∏—é
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ crop_to_70_percent_with_blur...")
    try:
        result_path = crop_to_70_percent_with_blur(test_input, test_output)
        if result_path and os.path.exists(result_path):
            print(f"‚úì –§—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ. –†–µ–∑—É–ª—å—Ç–∞—Ç: {result_path}")

            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã—Ö–æ–¥–Ω–æ–º –≤–∏–¥–µ–æ
            ffprobe_cmd = [
                'ffprobe',
                '-v', 'error',
                '-select_streams', 'v:0',
                '-show_entries', 'stream=width,height',
                '-of', 'json',
                test_output
            ]
            probe_result = subprocess.run(ffprobe_cmd, capture_output=True, text=True, check=True)
            import json
            probe_data = json.loads(probe_result.stdout)
            width = probe_data['streams'][0]['width']
            height = probe_data['streams'][0]['height']

            print(f"‚úì –†–∞–∑–º–µ—Ä—ã –≤—ã—Ö–æ–¥–Ω–æ–≥–æ –≤–∏–¥–µ–æ: {width}x{height}")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —à–∏—Ä–∏–Ω–∞ –ø—Ä–∏–º–µ—Ä–Ω–æ 70% –æ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª–∞ (1920 * 0.7 = 1344)
            expected_width = int(1920 * 0.7)
            if abs(width - expected_width) < 10:  # –î–æ–ø—É—Å–∫ 10 –ø–∏–∫—Å–µ–ª–µ–π
                print(f"‚úì –®–∏—Ä–∏–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞ (–æ–∂–∏–¥–∞–ª–æ—Å—å ~{expected_width}, –ø–æ–ª—É—á–µ–Ω–æ {width})")
            else:
                print(f"‚ö† –®–∏—Ä–∏–Ω–∞ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –æ–∂–∏–¥–∞–µ–º–æ–π (–æ–∂–∏–¥–∞–ª–æ—Å—å ~{expected_width}, –ø–æ–ª—É—á–µ–Ω–æ {width})")

            return True
        else:
            print("‚úó –§—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—É–ª–∞ None –∏–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω")
            return False

    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

    finally:
        # –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
        for file in [test_input, test_output]:
            if os.path.exists(file):
                try:
                    os.remove(file)
                    print(f"‚úì –£–¥–∞–ª–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: {file}")
                except Exception as e:
                    print(f"‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å {file}: {e}")

if __name__ == "__main__":
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ crop_to_70_percent_with_blur ===")
    success = test_crop_function()
    if success:
        print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏!")
    sys.exit(0 if success else 1)